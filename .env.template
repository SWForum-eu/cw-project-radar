##########################################################################
##                                                                      ##
##  IMPORTANT NOTICE                                                    ##
##                                                                      ##
##  This configuration file contains sensitice information. Therefore,  ##
##  read access to this file MUST be properly restricted in producion   ##
##  environments.                                                       ##
##                                                                      ##
##  NEVER EVER use the same database or the same DB user credentials    ##
##  for development and production!                                     ##
##                                                                      ##
##########################################################################

#
# NODE.JS DEPLOYMENT MODE 
#
# Set development or production flag for the application.
# Anything _NOT_ identical to 'production' is considered development.
#
# Default: development
#
#NODE_ENV=production

#####################
#                   #
#  DATABASE  SETUP  #
#                   #
#####################

#
# MONGO DB SETUP
#
# The MongoDB connection URL. Obtain this from your MongoDB installation. This variable MUST
# be set; there is no default.
#
# EXAMPLE: "mongodb+srv://username:password@example.com"
#
DB_URL=""

#####################
#                   #
#  SERVER  OPTIONS  #
#                   #
#####################

#
# LOGGING LEVEL
#
# Set the server logging level. Any of the following values is valid; in descending 
# order of importance: [error, warn, info, http, verbose, debug, silly]
#
# Default: 'info'
#
#LOG_LEVEL=info

#
# Server port. 
#
# The application binds to any IP address (i.e. 0.0.0.0) on the specified port.
#
# Default: 8443
#
#PORT=8443

#
# HTTPS CONFIGURATION
#
# The server enforces HTTPS as the sole connection method (HTTP is strictly forbitten).
# To configure HTTPS correctly, the following two variables must be set to point the certificate
# and the private key file.
#
# ATTENTION: These two files are sensitive by nature, so a production deployment MUST ensure
# that access rights are restricted accordingly.
#
# Default: 'cert.pem', and 'private_key', respectively
#
#HTTPS_CERT='cert.pem'
#HTTPS_KEY='private_key.pem'

#
# CORS WHITELIST
#
# A list of white space separated origins; used for all API calls as well as external widgets.
# Any site that wishes to connect and use the API must be whitelisted. 'localhost' needn't be 
# whitelisted; it is hardcoded to be allowed.
#
# EXAMPLE: CORS_WHITELIST="https://www.cyberwatching.eu https://swforum.eu"
#
# Default: empty
#
#CORS_WHITELIST=""

#
# JWT CONFIGURATION
#
# These three values are required to operate a secure JWT based token authorisation system:
# JWTs are used for both API authorsation and browser based authorisation.
#
# The secret passphrase used to generate and sign JWTs
JWT_SECRET=Fifty_Wild_Horses_Stampede_The_Prairie
# The expiration date of the JWT token, given in hours. The maximum lifespan of a JWT is hardcoded
# to be 24 hours.
JWT_EXPIRES_IN=2

#
# GOOGLE ANALYTICS (GA)
#
# Setting the GA property variable will enable integration with Google Analytics.
# The async script provided on https://developers.google.com/analytics/devguides/collection/analyticsjs
# will be added to the UI pages (not the API) if ths variable is provided.
#
# Default: disabled
#
# Example: UA-12345-Y
#GA_PROPERTY=UA-XXXXX-Y

#
# RELEASE NOTES URL
#
# Provide a link to the release notes on GitHub here. If not set, no release notes link to the release notes 
# will be set.
# Otherwise, "(View release notes") will be appended beneath the version infrmation
#
# Default: https://github.com/micheldrescher/cw-project-radar/releases
#
# Example: https://github.com/micheldrescher/cw-project-radar/releases
# RELEASE_NOTES_URL=""

##########################
#                        #
#  DOMAIN CONFIGURATION  #
#                        #
##########################

#
# Radar model configuration
#
# The maximum age of projects, in months
MODEL_MAX_AGE=12

#
# Threshold of time since its addition to the database uintil it is no longer considered "new", in months.
# Default: 6 months.
#
#IS_NEW=6

# The names of the segments (against which projects classification is validated).
# The order of the names is important; segments are rendered clockwise with the first
# segment starting at the 12 o'clock position.
# A comma separated list of segment names, in double quotes
MODEL_SEGMENTS="Tools & Techniques, Platforms, Languages & Frameworks"

# Names of the rings of the radar. Used to validate radar ring location for projects/blips
# Order of names is important; rings start innermost across all segments.
# Semantic allocation of rings is application specific (and handled in code)
MODEL_RINGS="Adopt, Trial, Assess, Hold"

# The lifecycle stages of a project. While currently the same as the rings albeit in different order
# these may change into a different model in the future.
MODEL_LCYCLE="Assess, Trial, Adopt, Hold"

# Gradients used for the colouring of blips.
# Defaults are: #FF0000 (red), #FF8F00 (orange), #FFFF00 (yellow), #BFFF00 (light-green) and #00FF00 (lime)
GRADIENTS="#FF0000, #FF8F00, #FFFF00, #BFFF00, #00FF00"

